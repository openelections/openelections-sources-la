name: Capture State Data

on:
  schedule:
    - cron: '0 1 * * *'
  workflow_dispatch:

env:
  CAPTURE_RANGE: 2020
  CAPTURE_TYPE: historical
  STATE: LA
  ORG_NAME: openelections
  DATA_REPO_NAME: openelections-data-la

jobs:
  setup-and-run-bot:
    name: Setup and Run PelicanBot
    runs-on: ubuntu-latest
    outputs:
      data-changed: ${{ steps.verify-changed-files.outputs.files_changed }}
    steps:
      - name: Checkout Local Repo
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Poetry
        run: curl -sSL https://install.python-poetry.org | python -
        working-directory: pelbot

      - name: Install Dependencies and Run Bot
        run: |
          poetry install
          poetry run python -m run
        working-directory: pelbot
        env:
          CAPTURE_RANGE: ${{ env.CAPTURE_RANGE }}
          CAPTURE_TYPE: ${{ env.CAPTURE_TYPE }}
          STATE: ${{ env.STATE }}

      - name: Verify Changed files
        id: verify-changed-files
        uses: tj-actions/verify-changed-files@v16
        with:
          files: |
            data/**

      - name: Export Data
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: election-data
          path: data/

  commit-and-push:
    name: Commit and Push Changes
    needs: setup-and-run-bot
    if: needs.setup-and-run-bot.outputs.data-changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Local Repo
        uses: actions/checkout@v4

      # Download data from previous job, only if it has changed
      - name: Download Data
        uses: actions/download-artifact@v3
        with:
          name: election-data

      - name: Commit and Push Changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: Updated Raw Election Files
          branch: main
          file_pattern: data/**
        env:
          GIT_USER_NAME: ${{ secrets.USER_NAME }}
          GIT_USER_EMAIL: ${{ secrets.USER_EMAIL }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notify-data-repo:
    name: Notify Data Repo
    needs: commit-and-push
    runs-on: ubuntu-latest
    if: needs.commit-and-push.result == 'success'
    steps:
      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          repository: ${{ env.ORG_NAME }}/${{ env.DATA_REPO_NAME }}
          event-type: import-data-trigger
